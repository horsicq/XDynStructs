struct _CC_PARTITION// Size=0x3c0
{
    short NodeTypeCode;// Offset=0x0 Size=0x2
    short NodeByteSize;// Offset=0x2 Size=0x2
    unsigned char __align0[60];// Offset=0x4 Size=0x3c
    unsigned long long MasterLock;// Offset=0x40 Size=0x8
    unsigned char __align1[56];// Offset=0x48 Size=0x38
    unsigned long long WorkQueueLock;// Offset=0x80 Size=0x8
    unsigned short PartitionID;// Offset=0x88 Size=0x2
    unsigned char __align2[6];// Offset=0x8a Size=0x6
    struct _LIST_ENTRY PartitionLinks;// Offset=0x90 Size=0x10
    struct _LIST_ENTRY CleanSharedCacheMapList;// Offset=0xa0 Size=0x10
    struct _LIST_ENTRY CleanSharedCacheMapWithLogHandleList;// Offset=0xb0 Size=0x10
    struct _SHARED_CACHE_MAP_LIST_CURSOR DirtySharedCacheMapList;// Offset=0xc0 Size=0x18
    struct _SHARED_CACHE_MAP_LIST_CURSOR LazyWriterCursor;// Offset=0xd8 Size=0x18
    struct _LIST_ENTRY DirtySharedCacheMapWithLogHandleList;// Offset=0xf0 Size=0x10
    struct _EX_PUSH_LOCK ChangeSharedCacheMapFileLock;// Offset=0x100 Size=0x8
    unsigned long ConsecutiveWorklessLazyScanCount;// Offset=0x108 Size=0x4
    unsigned char ForcedDisableLazywriteScan;// Offset=0x10c Size=0x1
    unsigned char __align3[3];// Offset=0x10d Size=0x3
    unsigned long NumberWorkerThreads;// Offset=0x110 Size=0x4
    unsigned long NumberActiveWorkerThreads;// Offset=0x114 Size=0x4
    struct _LIST_ENTRY IdleWorkerThreadList;// Offset=0x118 Size=0x10
    struct _LIST_ENTRY FastTeardownWorkQueue;// Offset=0x128 Size=0x10
    struct _LIST_ENTRY ExpressWorkQueue;// Offset=0x138 Size=0x10
    struct _LIST_ENTRY RegularWorkQueue;// Offset=0x148 Size=0x10
    struct _LIST_ENTRY PostTickWorkQueue;// Offset=0x158 Size=0x10
    struct _LIST_ENTRY IdleExtraWriteBehindThreadList;// Offset=0x168 Size=0x10
    unsigned long ActiveExtraWriteBehindThreads;// Offset=0x178 Size=0x4
    unsigned long MaxExtraWriteBehindThreads;// Offset=0x17c Size=0x4
    unsigned char QueueThrottle;// Offset=0x180 Size=0x1
    unsigned char __align4[3];// Offset=0x181 Size=0x3
    unsigned long PostTickWorkItemCount;// Offset=0x184 Size=0x4
    unsigned long ThreadsActiveBeforeThrottle;// Offset=0x188 Size=0x4
    unsigned long ExtraWBThreadsActiveBeforeThrottle;// Offset=0x18c Size=0x4
    unsigned long ExecutingWriteBehindWorkItems;// Offset=0x190 Size=0x4
    unsigned long ExecutingHighPriorityWorkItem;// Offset=0x194 Size=0x4
    struct _KEVENT LowMemoryEvent;// Offset=0x198 Size=0x18
    struct _KEVENT PowerEvent;// Offset=0x1b0 Size=0x18
    struct _KEVENT PeriodicEvent;// Offset=0x1c8 Size=0x18
    struct _KEVENT WaitingForTeardownEvent;// Offset=0x1e0 Size=0x18
    struct _KEVENT CoalescingFlushEvent;// Offset=0x1f8 Size=0x18
    unsigned long PagesYetToWrite;// Offset=0x210 Size=0x4
    unsigned char __align5[4];// Offset=0x214 Size=0x4
    struct _LAZY_WRITER LazyWriter;// Offset=0x218 Size=0x88
    struct _DIRTY_PAGE_STATISTICS DirtyPageStatistics;// Offset=0x2a0 Size=0x18
    struct _DIRTY_PAGE_THRESHOLDS DirtyPageThresholds;// Offset=0x2b8 Size=0x38
    struct _WRITE_BEHIND_THROUGHPUT * ThroughputStats;// Offset=0x2f0 Size=0x8
    long ThroughputTrend;// Offset=0x2f8 Size=0x4
    unsigned char __align6[4];// Offset=0x2fc Size=0x4
    unsigned long long AverageAvailablePages;// Offset=0x300 Size=0x8
    unsigned long long AverageDirtyPages;// Offset=0x308 Size=0x8
    unsigned long long PagesSkippedDueToHotSpot;// Offset=0x310 Size=0x8
    union _LARGE_INTEGER PrevRegularQueueItemRunTime;// Offset=0x318 Size=0x8
    union _LARGE_INTEGER PrevExtraWBThreadCheckTime;// Offset=0x320 Size=0x8
    unsigned char AddExtraWriteBehindThreads;// Offset=0x328 Size=0x1
    unsigned char RemoveExtraThreadPending;// Offset=0x329 Size=0x1
    unsigned char __align7[6];// Offset=0x32a Size=0x6
    struct _LIST_ENTRY DeferredWrites;// Offset=0x330 Size=0x10
    unsigned long long DeferredWriteSpinLock;// Offset=0x340 Size=0x8
    struct _LIST_ENTRY * IdleAsyncReadWorkerThreadList;// Offset=0x348 Size=0x8
    unsigned long * NumberActiveAsyncReadWorkerThreads;// Offset=0x350 Size=0x8
    unsigned long * NumberActiveCompleteAsyncReadWorkItems;// Offset=0x358 Size=0x8
    struct _LIST_ENTRY * AsyncReadWorkQueue;// Offset=0x360 Size=0x8
    struct _LIST_ENTRY * AsyncReadCompletionWorkQueue;// Offset=0x368 Size=0x8
    struct _KEVENT * NewAsyncReadRequestEvent;// Offset=0x370 Size=0x8
    struct _ASYNC_READ_THREAD_STATS * ReaderThreadsStats;// Offset=0x378 Size=0x8
    struct _EX_PUSH_LOCK AsyncReadWorkQueueLock;// Offset=0x380 Size=0x8
};