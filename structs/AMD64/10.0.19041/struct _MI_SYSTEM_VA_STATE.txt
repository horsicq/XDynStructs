struct _MI_SYSTEM_VA_STATE// Size=0x4c0
{
    unsigned long long SystemTablesLock;// Offset=0x0 Size=0x8
    unsigned long long AvailableSystemCacheVa;// Offset=0x8 Size=0x8
    struct _MI_DYNAMIC_BITMAP DynamicBitMapKernelStacks;// Offset=0x10 Size=0x48
    struct _MI_DYNAMIC_BITMAP DynamicBitMapSystemPtes;// Offset=0x58 Size=0x48
    struct _MI_DYNAMIC_BITMAP DynamicBitMapDriverImages[2];// Offset=0xa0 Size=0x90
    struct _MI_DYNAMIC_BITMAP DynamicBitMapPagedPool;// Offset=0x130 Size=0x48
    struct _MI_DYNAMIC_BITMAP DynamicBitMapSystemCache;// Offset=0x178 Size=0x48
    struct _MI_DYNAMIC_BITMAP DynamicBitMapSecureNonPagedPool;// Offset=0x1c0 Size=0x48
    void * HalPrivateVaStart;// Offset=0x208 Size=0x8
    unsigned long long HalPrivateVaSize;// Offset=0x210 Size=0x8
    unsigned long SystemVaAssignment[8];// Offset=0x218 Size=0x20
    unsigned long SystemVaAssignmentHint;// Offset=0x238 Size=0x4
    unsigned long TopLevelPteLockBits[32];// Offset=0x23c Size=0x80
    long DeleteKvaLock;// Offset=0x2bc Size=0x4
    struct _MI_WSLE * WsleArrays[8];// Offset=0x2c0 Size=0x40
    void * PagableHyperSpace;// Offset=0x300 Size=0x8
    void * HyperSpaceEnd;// Offset=0x308 Size=0x8
    unsigned long long PagableHyperSpaceBytes;// Offset=0x310 Size=0x8
    unsigned long long PageTableCommitmentOffset[2];// Offset=0x318 Size=0x10
    struct _KEVENT FreeSystemCacheVa;// Offset=0x328 Size=0x18
    unsigned long long SystemVaLock;// Offset=0x340 Size=0x8
    unsigned long long SystemCacheViewLock;// Offset=0x348 Size=0x8
    struct _MMWSL_INSTANCE SystemWorkingSetList[8];// Offset=0x350 Size=0x140
    unsigned long long SelfmapLock[4];// Offset=0x490 Size=0x20
};