struct _CC_PARTITION// Size=0x440
{
    short NodeTypeCode;// Offset=0x0 Size=0x2
    short NodeByteSize;// Offset=0x2 Size=0x2
    unsigned char __align0[4];// Offset=0x4 Size=0x4
    struct _EPARTITION * PartitionObject;// Offset=0x8 Size=0x8
    struct _LIST_ENTRY CleanSharedCacheMapList;// Offset=0x10 Size=0x10
    struct _LIST_ENTRY CleanSharedCacheMapWithLogHandleList;// Offset=0x20 Size=0x10
    struct _SHARED_CACHE_MAP_LIST_CURSOR DirtySharedCacheMapList;// Offset=0x30 Size=0x18
    struct _SHARED_CACHE_MAP_LIST_CURSOR LazyWriteCursor;// Offset=0x48 Size=0x18
    struct _LIST_ENTRY DirtySharedCacheMapWithLogHandleList;// Offset=0x60 Size=0x10
    unsigned char __align1[16];// Offset=0x70 Size=0x10
    unsigned long long PrivateLock;// Offset=0x80 Size=0x8
    unsigned long ConsecutiveWorklessLazyScanCount;// Offset=0x88 Size=0x4
    unsigned char ForcedDisableLazywriteScan;// Offset=0x8c Size=0x1
    unsigned char __align2[51];// Offset=0x8d Size=0x33
    unsigned long long WorkQueueLock;// Offset=0xc0 Size=0x8
    unsigned long NumberWorkerThreads;// Offset=0xc8 Size=0x4
    unsigned long NumberActiveWorkerThreads;// Offset=0xcc Size=0x4
    struct _LIST_ENTRY IdleWorkerThreadList;// Offset=0xd0 Size=0x10
    struct _LIST_ENTRY FastTeardownWorkQueue;// Offset=0xe0 Size=0x10
    struct _LIST_ENTRY ExpressWorkQueue;// Offset=0xf0 Size=0x10
    struct _LIST_ENTRY RegularWorkQueue;// Offset=0x100 Size=0x10
    struct _LIST_ENTRY PostTickWorkQueue;// Offset=0x110 Size=0x10
    struct _LIST_ENTRY CleanCachemapUninitWorkQueue;// Offset=0x120 Size=0x10
    struct _LIST_ENTRY IdleExtraWriteBehindThreadList;// Offset=0x130 Size=0x10
    unsigned long ActiveExtraWriteBehindThreads;// Offset=0x140 Size=0x4
    unsigned long MaxExtraWriteBehindThreads;// Offset=0x144 Size=0x4
    struct _LIST_ENTRY IdleCacheMapUninitThreadList;// Offset=0x148 Size=0x10
    unsigned long ActiveCacheMapUninitThreads;// Offset=0x158 Size=0x4
    unsigned long MaxCacheMapUninitThreads;// Offset=0x15c Size=0x4
    unsigned char QueueThrottle;// Offset=0x160 Size=0x1
    unsigned char __align3[3];// Offset=0x161 Size=0x3
    unsigned long PostTickWorkItemCount;// Offset=0x164 Size=0x4
    unsigned long ThreadsActiveBeforeThrottle;// Offset=0x168 Size=0x4
    unsigned long ExtraWBThreadsActiveBeforeThrottle;// Offset=0x16c Size=0x4
    unsigned long ExecutingWriteBehindWorkItems;// Offset=0x170 Size=0x4
    unsigned long ExecutingHighPriorityWorkItem;// Offset=0x174 Size=0x4
    struct _KEVENT LowMemoryEvent;// Offset=0x178 Size=0x18
    struct _KEVENT PowerEvent;// Offset=0x190 Size=0x18
    struct _KEVENT PeriodicEvent;// Offset=0x1a8 Size=0x18
    struct _KEVENT WaitingForTeardownEvent;// Offset=0x1c0 Size=0x18
    struct _KEVENT CoalescingFlushEvent;// Offset=0x1d8 Size=0x18
    unsigned long PagesYetToWrite;// Offset=0x1f0 Size=0x4
    unsigned char __align4[4];// Offset=0x1f4 Size=0x4
    struct _LAZY_WRITER LazyWriter;// Offset=0x1f8 Size=0x88
    struct _DIRTY_PAGE_STATISTICS DirtyPageStatistics;// Offset=0x280 Size=0x18
    struct _DIRTY_PAGE_THRESHOLDS DirtyPageThresholds;// Offset=0x298 Size=0x38
    struct _WRITE_BEHIND_THROUGHPUT * ThroughputStats;// Offset=0x2d0 Size=0x8
    long ThroughputTrend;// Offset=0x2d8 Size=0x4
    unsigned char __align5[4];// Offset=0x2dc Size=0x4
    unsigned long long AverageAvailablePages;// Offset=0x2e0 Size=0x8
    unsigned long long AverageDirtyPages;// Offset=0x2e8 Size=0x8
    unsigned long long PagesSkippedDueToHotSpot;// Offset=0x2f0 Size=0x8
    union _LARGE_INTEGER PrevRegularQueueItemRunTime;// Offset=0x2f8 Size=0x8
    union _LARGE_INTEGER PrevExtraWBThreadCheckTime;// Offset=0x300 Size=0x8
    unsigned char AddExtraWriteBehindThreads;// Offset=0x308 Size=0x1
    unsigned char RemoveExtraThreadPending;// Offset=0x309 Size=0x1
    unsigned char __align6[6];// Offset=0x30a Size=0x6
    struct _LIST_ENTRY DeferredWrites;// Offset=0x310 Size=0x10
    unsigned char __align7[32];// Offset=0x320 Size=0x20
    unsigned long long DeferredWriteSpinLock;// Offset=0x340 Size=0x8
    struct _LIST_ENTRY * IdleAsyncReadWorkerThreadList;// Offset=0x348 Size=0x8
    unsigned long * NumberActiveAsyncReadWorkerThreads;// Offset=0x350 Size=0x8
    unsigned long * NumberActiveCompleteAsyncReadWorkItems;// Offset=0x358 Size=0x8
    struct _LIST_ENTRY * AsyncReadWorkQueue;// Offset=0x360 Size=0x8
    struct _LIST_ENTRY * AsyncReadCompletionWorkQueue;// Offset=0x368 Size=0x8
    struct _KEVENT * NewAsyncReadRequestEvent;// Offset=0x370 Size=0x8
    struct _ASYNC_READ_THREAD_STATS * ReaderThreadsStats;// Offset=0x378 Size=0x8
    struct _EX_PUSH_LOCK AsyncReadWorkQueueLock;// Offset=0x380 Size=0x8
    struct _LIST_ENTRY VacbFreeHighPriorityList;// Offset=0x388 Size=0x10
    unsigned long NumberOfFreeHighPriorityVacbs;// Offset=0x398 Size=0x4
    unsigned char __align8[4];// Offset=0x39c Size=0x4
    struct _ETHREAD * LowPriWorkerThread;// Offset=0x3a0 Size=0x8
    struct _SHARED_CACHE_MAP * LowPriSharedCacheMap;// Offset=0x3a8 Size=0x8
    long LowPriOldCpuPriority;// Offset=0x3b0 Size=0x4
    enum _IO_PRIORITY_HINT LowPriOldIoPriority;// Offset=0x3b4 Size=0x4
    struct _EX_PUSH_LOCK LowPriorityWorkerThreadLock;// Offset=0x3b8 Size=0x8
    unsigned long MaxNumberOfWriteBehindThreads;// Offset=0x3c0 Size=0x4
    unsigned char CoalescingState;// Offset=0x3c4 Size=0x1
    unsigned char ActivePartition;// Offset=0x3c5 Size=0x1
    unsigned char RundownPhase;// Offset=0x3c6 Size=0x1
    unsigned char __align9[1];// Offset=0x3c7 Size=0x1
    long long RefCount;// Offset=0x3c8 Size=0x8
    struct _KEVENT ExitEvent;// Offset=0x3d0 Size=0x18
    struct _KEVENT FinalDereferenceEvent;// Offset=0x3e8 Size=0x18
    void * LazyWriteScanThreadHandle;// Offset=0x400 Size=0x8
};