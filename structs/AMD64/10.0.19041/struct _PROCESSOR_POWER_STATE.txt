struct _PROCESSOR_POWER_STATE// Size=0x200
{
    struct _PPM_IDLE_STATES * IdleStates;// Offset=0x0 Size=0x8
    struct _PROC_IDLE_ACCOUNTING * IdleAccounting;// Offset=0x8 Size=0x8
    unsigned long long IdleTimeLast;// Offset=0x10 Size=0x8
    unsigned long long IdleTimeTotal;// Offset=0x18 Size=0x8
    unsigned long long IdleTimeEntry;// Offset=0x20 Size=0x8
    unsigned long long IdleTimeExpiration;// Offset=0x28 Size=0x8
    unsigned char NonInterruptibleTransition;// Offset=0x30 Size=0x1
    unsigned char PepWokenTransition;// Offset=0x31 Size=0x1
    unsigned char HvTargetState;// Offset=0x32 Size=0x1
    unsigned char SoftParked;// Offset=0x33 Size=0x1
    unsigned long TargetIdleState;// Offset=0x34 Size=0x4
    struct _PROC_IDLE_POLICY IdlePolicy;// Offset=0x38 Size=0x6
    unsigned char __align0[2];// Offset=0x3e Size=0x2
    union _PPM_IDLE_SYNCHRONIZATION_STATE Synchronization;// Offset=0x40 Size=0x4
    unsigned char __align1[4];// Offset=0x44 Size=0x4
    struct _PROC_FEEDBACK PerfFeedback;// Offset=0x48 Size=0x90
    enum _PROC_HYPERVISOR_STATE Hypervisor;// Offset=0xd8 Size=0x4
    unsigned long LastSysTime;// Offset=0xdc Size=0x4
    unsigned long long WmiDispatchPtr;// Offset=0xe0 Size=0x8
    long WmiInterfaceEnabled;// Offset=0xe8 Size=0x4
    unsigned char __align2[4];// Offset=0xec Size=0x4
    struct _PPM_FFH_THROTTLE_STATE_INFO FFHThrottleStateInfo;// Offset=0xf0 Size=0x20
    struct _KDPC PerfActionDpc;// Offset=0x110 Size=0x40
    long PerfActionMask;// Offset=0x150 Size=0x4
    unsigned char __align3[4];// Offset=0x154 Size=0x4
    struct _PROC_IDLE_SNAP HvIdleCheck;// Offset=0x158 Size=0x10
    struct _PROC_PERF_CHECK_CONTEXT CheckContext;// Offset=0x168 Size=0x40
    struct _PPM_CONCURRENCY_ACCOUNTING * Concurrency;// Offset=0x1a8 Size=0x8
    struct _PPM_CONCURRENCY_ACCOUNTING * ClassConcurrency;// Offset=0x1b0 Size=0x8
    unsigned char ArchitecturalEfficiencyClass;// Offset=0x1b8 Size=0x1
    unsigned char PerformanceSchedulingClass;// Offset=0x1b9 Size=0x1
    unsigned char EfficiencySchedulingClass;// Offset=0x1ba Size=0x1
    unsigned char Unused;// Offset=0x1bb Size=0x1
    unsigned char Parked;// Offset=0x1bc Size=0x1
    unsigned char LongPriorQosPeriod;// Offset=0x1bd Size=0x1
    unsigned char __align4[2];// Offset=0x1be Size=0x2
    unsigned long long SnapTimeLast;// Offset=0x1c0 Size=0x8
    unsigned long long EnergyConsumed;// Offset=0x1c0 Size=0x8
    unsigned long long ActiveTime;// Offset=0x1c8 Size=0x8
    unsigned long long TotalTime;// Offset=0x1d0 Size=0x8
    struct _POP_FX_DEVICE * FxDevice;// Offset=0x1d8 Size=0x8
    unsigned long long LastQosTranstionTsc;// Offset=0x1e0 Size=0x8
    unsigned long long QosTransitionHysteresis;// Offset=0x1e8 Size=0x8
    enum _KHETERO_CPU_QOS RequestedQosClass;// Offset=0x1f0 Size=0x4
    enum _KHETERO_CPU_QOS ResolvedQosClass;// Offset=0x1f4 Size=0x4
    unsigned short QosEquivalencyMask;// Offset=0x1f8 Size=0x2
    unsigned short HwFeedbackTableIndex;// Offset=0x1fa Size=0x2
    unsigned char HwFeedbackParkHint;// Offset=0x1fc Size=0x1
    unsigned char HwFeedbackPerformanceClass;// Offset=0x1fd Size=0x1
    unsigned char HwFeedbackEfficiencyClass;// Offset=0x1fe Size=0x1
    unsigned char HeteroCoreType;// Offset=0x1ff Size=0x1
};