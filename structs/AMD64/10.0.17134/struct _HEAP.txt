struct _HEAP// Size=0x2a0
{
    struct _HEAP_SEGMENT Segment;// Offset=0x0 Size=0x70
    struct _HEAP_ENTRY Entry;// Offset=0x0 Size=0x10
    unsigned long SegmentSignature;// Offset=0x10 Size=0x4
    unsigned long SegmentFlags;// Offset=0x14 Size=0x4
    struct _LIST_ENTRY SegmentListEntry;// Offset=0x18 Size=0x10
    struct _HEAP * Heap;// Offset=0x28 Size=0x8
    void * BaseAddress;// Offset=0x30 Size=0x8
    unsigned long NumberOfPages;// Offset=0x38 Size=0x4
    struct _HEAP_ENTRY * FirstEntry;// Offset=0x40 Size=0x8
    struct _HEAP_ENTRY * LastValidEntry;// Offset=0x48 Size=0x8
    unsigned long NumberOfUnCommittedPages;// Offset=0x50 Size=0x4
    unsigned long NumberOfUnCommittedRanges;// Offset=0x54 Size=0x4
    unsigned short SegmentAllocatorBackTraceIndex;// Offset=0x58 Size=0x2
    unsigned short Reserved;// Offset=0x5a Size=0x2
    struct _LIST_ENTRY UCRSegmentList;// Offset=0x60 Size=0x10
    unsigned long Flags;// Offset=0x70 Size=0x4
    unsigned long ForceFlags;// Offset=0x74 Size=0x4
    unsigned long CompatibilityFlags;// Offset=0x78 Size=0x4
    unsigned long EncodeFlagMask;// Offset=0x7c Size=0x4
    struct _HEAP_ENTRY Encoding;// Offset=0x80 Size=0x10
    unsigned long Interceptor;// Offset=0x90 Size=0x4
    unsigned long VirtualMemoryThreshold;// Offset=0x94 Size=0x4
    unsigned long Signature;// Offset=0x98 Size=0x4
    unsigned long long SegmentReserve;// Offset=0xa0 Size=0x8
    unsigned long long SegmentCommit;// Offset=0xa8 Size=0x8
    unsigned long long DeCommitFreeBlockThreshold;// Offset=0xb0 Size=0x8
    unsigned long long DeCommitTotalFreeThreshold;// Offset=0xb8 Size=0x8
    unsigned long long TotalFreeSize;// Offset=0xc0 Size=0x8
    unsigned long long MaximumAllocationSize;// Offset=0xc8 Size=0x8
    unsigned short ProcessHeapsListIndex;// Offset=0xd0 Size=0x2
    unsigned short HeaderValidateLength;// Offset=0xd2 Size=0x2
    void * HeaderValidateCopy;// Offset=0xd8 Size=0x8
    unsigned short NextAvailableTagIndex;// Offset=0xe0 Size=0x2
    unsigned short MaximumTagIndex;// Offset=0xe2 Size=0x2
    struct _HEAP_TAG_ENTRY * TagEntries;// Offset=0xe8 Size=0x8
    struct _LIST_ENTRY UCRList;// Offset=0xf0 Size=0x10
    unsigned long long AlignRound;// Offset=0x100 Size=0x8
    unsigned long long AlignMask;// Offset=0x108 Size=0x8
    struct _LIST_ENTRY VirtualAllocdBlocks;// Offset=0x110 Size=0x10
    struct _LIST_ENTRY SegmentList;// Offset=0x120 Size=0x10
    unsigned short AllocatorBackTraceIndex;// Offset=0x130 Size=0x2
    unsigned long NonDedicatedListLength;// Offset=0x134 Size=0x4
    void * BlocksIndex;// Offset=0x138 Size=0x8
    void * UCRIndex;// Offset=0x140 Size=0x8
    struct _HEAP_PSEUDO_TAG_ENTRY * PseudoTagEntries;// Offset=0x148 Size=0x8
    struct _LIST_ENTRY FreeLists;// Offset=0x150 Size=0x10
    struct _HEAP_LOCK * LockVariable;// Offset=0x160 Size=0x8
    long  ( * CommitRoutine)(void * ,void ** ,unsigned long long * );// Offset=0x168 Size=0x8
    union _RTL_RUN_ONCE StackTraceInitVar;// Offset=0x170 Size=0x8
    void * FrontEndHeap;// Offset=0x178 Size=0x8
    unsigned short FrontHeapLockCount;// Offset=0x180 Size=0x2
    unsigned char FrontEndHeapType;// Offset=0x182 Size=0x1
    unsigned char RequestedFrontEndHeapType;// Offset=0x183 Size=0x1
    unsigned short * FrontEndHeapUsageData;// Offset=0x188 Size=0x8
    unsigned short FrontEndHeapMaximumIndex;// Offset=0x190 Size=0x2
    unsigned char FrontEndHeapStatusBitmap[129];// Offset=0x192 Size=0x81
    struct _HEAP_COUNTERS Counters;// Offset=0x218 Size=0x78
    struct _HEAP_TUNING_PARAMETERS TuningParameters;// Offset=0x290 Size=0x10
};