struct _PROCESSOR_POWER_STATE// Size=0x180
{
    struct _PPM_IDLE_STATES * IdleStates;// Offset=0x0 Size=0x4
    struct _PROC_IDLE_ACCOUNTING * IdleAccounting;// Offset=0x4 Size=0x4
    unsigned long long IdleTimeLast;// Offset=0x8 Size=0x8
    unsigned long long IdleTimeTotal;// Offset=0x10 Size=0x8
    unsigned long long IdleTimeEntry;// Offset=0x18 Size=0x8
    unsigned long long IdleTimeExpiration;// Offset=0x20 Size=0x8
    unsigned char NonInterruptibleTransition;// Offset=0x28 Size=0x1
    unsigned char PepWokenTransition;// Offset=0x29 Size=0x1
    unsigned char EfficiencyClass;// Offset=0x2a Size=0x1
    unsigned char SchedulingClass;// Offset=0x2b Size=0x1
    unsigned long TargetIdleState;// Offset=0x2c Size=0x4
    struct _PROC_IDLE_POLICY IdlePolicy;// Offset=0x30 Size=0x6
    unsigned char __align0[2];// Offset=0x36 Size=0x2
    union _PPM_IDLE_SYNCHRONIZATION_STATE Synchronization;// Offset=0x38 Size=0x4
    unsigned char __align1[4];// Offset=0x3c Size=0x4
    struct _PROC_FEEDBACK PerfFeedback;// Offset=0x40 Size=0x88
    enum _PROC_HYPERVISOR_STATE Hypervisor;// Offset=0xc8 Size=0x4
    unsigned long LastSysTime;// Offset=0xcc Size=0x4
    unsigned long WmiDispatchPtr;// Offset=0xd0 Size=0x4
    long WmiInterfaceEnabled;// Offset=0xd4 Size=0x4
    struct _PPM_FFH_THROTTLE_STATE_INFO FFHThrottleStateInfo;// Offset=0xd8 Size=0x20
    struct _KDPC PerfActionDpc;// Offset=0xf8 Size=0x20
    long PerfActionMask;// Offset=0x118 Size=0x4
    unsigned char __align2[4];// Offset=0x11c Size=0x4
    struct _PROC_IDLE_SNAP HvIdleCheck;// Offset=0x120 Size=0x10
    struct _PROC_PERF_CHECK * PerfCheck;// Offset=0x130 Size=0x4
    struct _PROC_PERF_DOMAIN * Domain;// Offset=0x134 Size=0x4
    struct _PROC_PERF_CONSTRAINT * PerfConstraint;// Offset=0x138 Size=0x4
    struct _PPM_CONCURRENCY_ACCOUNTING * Concurrency;// Offset=0x13c Size=0x4
    struct _PROC_PERF_LOAD * Load;// Offset=0x140 Size=0x4
    struct _PROC_PERF_HISTORY * PerfHistory;// Offset=0x144 Size=0x4
    unsigned char GuaranteedPerformancePercent;// Offset=0x148 Size=0x1
    unsigned char HvTargetState;// Offset=0x149 Size=0x1
    unsigned char Parked;// Offset=0x14a Size=0x1
    unsigned char __align3[1];// Offset=0x14b Size=0x1
    unsigned long LatestPerformancePercent;// Offset=0x14c Size=0x4
    unsigned long AveragePerformancePercent;// Offset=0x150 Size=0x4
    unsigned long LatestAffinitizedPercent;// Offset=0x154 Size=0x4
    unsigned long RelativePerformance;// Offset=0x158 Size=0x4
    unsigned long Utility;// Offset=0x15c Size=0x4
    unsigned long AffinitizedUtility;// Offset=0x160 Size=0x4
    unsigned char __align4[4];// Offset=0x164 Size=0x4
    unsigned long long SnapTimeLast;// Offset=0x168 Size=0x8
    unsigned long long EnergyConsumed;// Offset=0x168 Size=0x8
    unsigned long long ActiveTime;// Offset=0x170 Size=0x8
    unsigned long long TotalTime;// Offset=0x178 Size=0x8
};