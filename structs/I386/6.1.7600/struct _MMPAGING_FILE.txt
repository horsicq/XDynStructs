struct _MMPAGING_FILE// Size=0x50
{
    unsigned long Size;// Offset=0x0 Size=0x4
    unsigned long MaximumSize;// Offset=0x4 Size=0x4
    unsigned long MinimumSize;// Offset=0x8 Size=0x4
    unsigned long FreeSpace;// Offset=0xc Size=0x4
    unsigned long PeakUsage;// Offset=0x10 Size=0x4
    unsigned long HighestPage;// Offset=0x14 Size=0x4
    struct _FILE_OBJECT * File;// Offset=0x18 Size=0x4
    struct _MMMOD_WRITER_MDL_ENTRY * Entry[2];// Offset=0x1c Size=0x8
    struct _UNICODE_STRING PageFileName;// Offset=0x24 Size=0x8
    struct _RTL_BITMAP * Bitmap;// Offset=0x2c Size=0x4
    struct _RTL_BITMAP * EvictStoreBitmap;// Offset=0x30 Size=0x4
    unsigned long BitmapHint;// Offset=0x34 Size=0x4
    unsigned long LastAllocationSize;// Offset=0x38 Size=0x4
    unsigned long ToBeEvictedCount;// Offset=0x3c Size=0x4
    unsigned short PageFileNumber:4;// Offset=0x40 Size=0x2 BitOffset=0x0 BitSize=0x4
    unsigned short BootPartition:1;// Offset=0x40 Size=0x2 BitOffset=0x4 BitSize=0x1
    unsigned short Spare0:11;// Offset=0x40 Size=0x2 BitOffset=0x5 BitSize=0xb
    unsigned short AdriftMdls:1;// Offset=0x42 Size=0x2 BitOffset=0x0 BitSize=0x1
    unsigned short Spare1:15;// Offset=0x42 Size=0x2 BitOffset=0x1 BitSize=0xf
    void * FileHandle;// Offset=0x44 Size=0x4
    unsigned long Lock;// Offset=0x48 Size=0x4
    struct _ETHREAD * LockOwner;// Offset=0x4c Size=0x4
};