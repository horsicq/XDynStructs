struct _PPM_PERF_STATES// Size=0x80
{
    unsigned long Count;// Offset=0x0 Size=0x4
    unsigned long MaxFrequency;// Offset=0x4 Size=0x4
    unsigned long PStateCap;// Offset=0x8 Size=0x4
    unsigned long TStateCap;// Offset=0xc Size=0x4
    unsigned long MaxPerfState;// Offset=0x10 Size=0x4
    unsigned long MinPerfState;// Offset=0x14 Size=0x4
    unsigned long LowestPState;// Offset=0x18 Size=0x4
    unsigned long IncreaseTime;// Offset=0x1c Size=0x4
    unsigned long DecreaseTime;// Offset=0x20 Size=0x4
    unsigned char BusyAdjThreshold;// Offset=0x24 Size=0x1
    unsigned char Reserved;// Offset=0x25 Size=0x1
    unsigned char ThrottleStatesOnly;// Offset=0x26 Size=0x1
    unsigned char PolicyType;// Offset=0x27 Size=0x1
    unsigned long TimerInterval;// Offset=0x28 Size=0x4
    union _unnamed_762 Flags;// Offset=0x2c Size=0x4
    struct _KAFFINITY_EX TargetProcessors;// Offset=0x30 Size=0xc
    long  ( * PStateHandler)(unsigned long ,unsigned long long ,unsigned long long );// Offset=0x3c Size=0x4
    unsigned long PStateContext;// Offset=0x40 Size=0x4
    long  ( * TStateHandler)(unsigned long ,unsigned long long ,unsigned long long );// Offset=0x44 Size=0x4
    unsigned long TStateContext;// Offset=0x48 Size=0x4
    unsigned char  ( * FeedbackHandler)(unsigned long * ,unsigned long ,unsigned char );// Offset=0x4c Size=0x4
    void  ( * GetFFHThrottleState)(unsigned long long * );// Offset=0x50 Size=0x4
    unsigned char __align0[4];// Offset=0x54 Size=0x4
    struct _PPM_PERF_STATE State[1];// Offset=0x58 Size=0x28
};